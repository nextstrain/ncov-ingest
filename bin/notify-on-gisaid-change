#!/bin/bash
set -euo pipefail

: "${SLACK_TOKEN:?The SLACK_TOKEN environment variable is required.}"

bin="$(dirname "$0")"

src="${1:?A source GISAID ndjson file is required as the first argument.}"
dst="${2:?A destination GISAID ndjson s3:// URL is required as the second argument.}"

# if the file is not already present, just exit
s3path="${2#s3://}"
bucket="${dst_s3path%%/*}"
key="${dst_s3path#*/}"
aws s3api head-object --bucket $bucket --key $key || exit 0

src_record_count="$(wc -l < "$src")"
dst_record_count="$(wc -l < <(aws s3 cp --no-progress "$dst" - | gunzip -cfq))"
added_records="$(( $src_record_count - $dst_record_count ))"

printf "%'4d %s\n" "$src_record_count" "$src"
printf "%'4d %s\n" "$dst_record_count" "$dst"
printf "%'4d added records\n" "$added_records"

if [[ $added_records -gt 0 ]]; then
    echo "Notifying Slack about added records (n=$added_records)"
    "$bin"/notify-slack ":rotating_light: <!channel> New nCoV records (n=$added_records) found on GISAID."

elif [[ $added_records -lt 0 ]]; then
    echo "New file has fewer recordsâ€½"

else
    echo "Files have the same number of records, skipping notification"
fi

#!/bin/bash
set -euo pipefail

bin="$(dirname "$0")"

main() {
    local quiet=0

    for arg; do
        case "$arg" in
            --quiet)
                quiet=1
                shift;;
            *)
                break;;
        esac
    done

    local src="${1:?A source file is required as the first argument.}"
    local dst="${2:?A destination s3:// URL is required as the second argument.}"
    local cloudfront_domain="${3:-}"

    local s3path="${dst#s3://}"
    local bucket="${s3path%%/*}"
    local key="${s3path#*/}"

    local src_hash dst_hash no_hash=0000000000000000000000000000000000000000000000000000000000000000
    src_hash="$("$bin/sha256sum" <"$src")"
    dst_hash="$(aws s3api head-object --bucket "$bucket" --key "$key" --query Metadata.sha256sum --output text 2>/dev/null || echo "$no_hash")"

    if [[ $src_hash != "$dst_hash" ]]; then
        # The record count may have changed
        src_record_count="$(wc -l <"$src")"

        src_filename=$(basename -- "$src")
        src_extension="${src_filename##*.}"
        src_filename="${src_filename%.*}"

        dst_filename=$(basename -- "$dst")
        dst_extension="${dst_filename##*.}"
        dst_filename="${dst_filename%.*}"

        echo "Uploading $src → $dst"

        if [[ "$src_extension" == "$dst_extension" ]]; then
            aws s3 cp --no-progress "$src" "$dst" --metadata sha256sum="$src_hash",recordcount="$src_record_count" "$(content-type "$dst")"cat "$src"
        else
            # Uncompress input if compressed
            if "$src" == "*.gz"; then
                gunzip -c
            elif [[ "$dst" == *.xz ]]; then
                xz --decompress -c
            elif [[ "$dst" == *.zst ]]; then
                zstdcat -c
            else
                cat
            fi "$src" | \
            if [[ "$dst" == *.gz ]]; then
                gzip -c
            elif [[ "$dst" == *.xz ]]; then
                xz -2 -T0 -c
            elif [[ "$dst" == *.zst ]]; then
                zstd -T0 -c
            else
                cat
            fi | aws s3 cp --no-progress - "$dst" --metadata sha256sum="$src_hash",recordcount="$src_record_count" "$(content-type "$dst")"
        fi

        if [[ -n $cloudfront_domain ]]; then
            echo "Creating CloudFront invalidation for $cloudfront_domain/$key"
            if ! "$bin"/cloudfront-invalidate "$cloudfront_domain" "/$key"; then
                echo "CloudFront invalidation failed, but exiting with success anyway."
            fi
        fi

        if [[ $quiet == 1 ]]; then
            echo "Quiet mode. No Slack notification sent."
            exit 0
        fi

        if ! "$bin"/notify-slack "Updated $dst available."; then
            echo "Notifying Slack failed, but exiting with success anyway."
        fi
    else
        echo "Uploading $src → $dst: files are identical, skipping upload"
    fi
}

content-type() {
    case "$1" in
        *.tsv)      echo --content-type=text/tab-separated-values;;
        *.csv)      echo --content-type=text/comma-separated-values;;
        *.ndjson)   echo --content-type=application/x-ndjson;;
        *.gz)       echo --content-type=application/gzip;;
        *.xz)       echo --content-type=application/x-xz;;
        *.zst)      echo --content-type=application/zstd;;
        *)          echo --content-type=text/plain;;
    esac
}

main "$@"
